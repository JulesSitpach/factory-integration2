name: Continuous Integration and Deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://example.supabase.co' }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'dummy-key-for-ci' }}
      DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://postgres:postgres@localhost:5432/factory_integration_test' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Type check
        run: npm run typecheck || npm run tsc --noEmit

      - name: Run tests
        run: npm test

      - name: Build application
        run: npm run build

      - name: Security scan
        uses: snyk/actions/node@master
        continue-on-error: true # Don't fail the build, just report
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN || '' }}
        with:
          args: --severity-threshold=high

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: .next
          retention-days: 7

  # Deployment job - only runs on main branch pushes
  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .next
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci --production
        
      - name: Deploy to production
        run: |
          echo "Deployment would happen here"
          # Add your deployment commands here
          # For example, deploying to Vercel:
          # npx vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          # Add any deployment-specific environment variables here
          NODE_ENV: production
